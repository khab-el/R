score <- list(train=train_data, test=fact_pred %>% filter(REPORT_DT == rep_dt) %>% select(prob))
perf <- perf_psi(score=score, x_limits = c(0,1), x_tick_break=0.1)
validation <- rbind(validation, c(as.character(as.Date(rep_dt)), "PSI", round(100*perf$psi$PSI,2)))
}
validation <- data.frame(REPORT_DT = "1900-01-01",Metric = "none",Value = 0,stringsAsFactors=FALSE)
for (rep_dt in unique(fact_pred$REPORT_DT)) {
gini <- round(100*Gini((fact_pred %>% filter(REPORT_DT == rep_dt))$prob, (fact_pred %>% filter(REPORT_DT == rep_dt))$churn),2)
validation <- rbind(validation, c(as.character(as.Date(rep_dt)), "Gini", gini))
score <- list(train=train_data, test=fact_pred %>% filter(REPORT_DT == rep_dt) %>% select(prob))
perf <- perf_psi(score=score, x_limits = c(0,1), x_tick_break=0.1)
validation <- rbind(validation, c(as.character(as.Date(rep_dt)), "PSI", round(100*perf$psi$PSI,2)))
}
View(validation)
validation <- data.frame(REPORT_DT = "1900-01-01",Metric = "none",Value = 0,stringsAsFactors=FALSE)
for (rep_dt in as.Date((fact_pred %>% group_by(REPORT_DT)%>% summarise())$REPORT_DT)) {
gini <- round(100*Gini((fact_pred %>% filter(REPORT_DT == rep_dt))$prob, (fact_pred %>% filter(REPORT_DT == rep_dt))$churn),2)
validation <- rbind(validation, c(as.character(as.Date(rep_dt)), "Gini", gini))
score <- list(train=train_data, test=fact_pred %>% filter(REPORT_DT == rep_dt) %>% select(prob))
perf <- perf_psi(score=score, x_limits = c(0,1), x_tick_break=0.1)
validation <- rbind(validation, c(as.character(as.Date(rep_dt)), "PSI", round(100*perf$psi$PSI,2)))
}
View(validation)
for (rep_dt in unique(fact_pred$REPORT_DT)) {
gini <- round(100*Gini((fact_pred %>% filter(REPORT_DT == rep_dt))$prob, (fact_pred %>% filter(REPORT_DT == rep_dt))$churn),2)
validation <- rbind(validation, c(as.character(rep_dt), "Gini", gini))
score <- list(train=train_data, test=fact_pred %>% filter(REPORT_DT == rep_dt) %>% select(prob))
perf <- perf_psi(score=score, x_limits = c(0,1), x_tick_break=0.1)
validation <- rbind(validation, c(as.character(rep_dt), "PSI", round(100*perf$psi$PSI,2)))
}
validation <- data.frame(REPORT_DT = "1900-01-01",Metric = "none",Value = 0,stringsAsFactors=FALSE)
for (rep_dt in unique(fact_pred$REPORT_DT)) {
gini <- round(100*Gini((fact_pred %>% filter(REPORT_DT == rep_dt))$prob, (fact_pred %>% filter(REPORT_DT == rep_dt))$churn),2)
validation <- rbind(validation, c(as.character(rep_dt), "Gini", gini))
score <- list(train=train_data, test=fact_pred %>% filter(REPORT_DT == rep_dt) %>% select(prob))
perf <- perf_psi(score=score, x_limits = c(0,1), x_tick_break=0.1)
validation <- rbind(validation, c(as.character(rep_dt), "PSI", round(100*perf$psi$PSI,2)))
}
validation <- data.frame(REPORT_DT = "1900-01-01",Metric = "none",Value = 0,stringsAsFactors=FALSE)
for (rep_dt in unique(fact_pred$REPORT_DT)) {
gini <- round(100*Gini((fact_pred %>% filter(REPORT_DT == rep_dt))$prob, (fact_pred %>% filter(REPORT_DT == rep_dt))$churn),2)
validation <- rbind(validation, c(as.Date(rep_dt), "Gini", gini))
score <- list(train=train_data, test=fact_pred %>% filter(REPORT_DT == rep_dt) %>% select(prob))
perf <- perf_psi(score=score, x_limits = c(0,1), x_tick_break=0.1)
validation <- rbind(validation, c(as.Date(rep_dt), "PSI", round(100*perf$psi$PSI,2)))
}
k <- unique(fact_pred$REPORT_DT)
validation <- data.frame(REPORT_DT = "1900-01-01",Metric = "none",Value = 0,stringsAsFactors=FALSE)
for (rep_dt in unique(fact_pred$REPORT_DT)) {
gini <- round(100*Gini((fact_pred %>% filter(REPORT_DT == rep_dt))$prob, (fact_pred %>% filter(REPORT_DT == rep_dt))$churn),2)
validation <- rbind(validation, c(rep_dt, "Gini", gini))
score <- list(train=train_data, test=fact_pred %>% filter(REPORT_DT == rep_dt) %>% select(prob))
perf <- perf_psi(score=score, x_limits = c(0,1), x_tick_break=0.1)
validation <- rbind(validation, c(rep_dt, "PSI", round(100*perf$psi$PSI,2)))
}
validation <- data.frame(REPORT_DT = "1900-01-01",Metric = "none",Value = 0,stringsAsFactors=FALSE)
for (rep_dt in unique(fact_pred$REPORT_DT)) {
gini <- round(100*Gini((fact_pred %>% filter(REPORT_DT == rep_dt))$prob, (fact_pred$REPORT_DT[REPORT_DT == rep_dt])$churn),2)
validation <- rbind(validation, c(rep_dt, "Gini", gini))
score <- list(train=train_data, test=fact_pred %>% filter(REPORT_DT == rep_dt) %>% select(prob))
perf <- perf_psi(score=score, x_limits = c(0,1), x_tick_break=0.1)
validation <- rbind(validation, c(rep_dt, "PSI", round(100*perf$psi$PSI,2)))
}
for (rep_dt in unique(fact_pred$REPORT_DT)) {
gini <- round(100*Gini((fact_pred %>% filter(REPORT_DT == rep_dt))$prob, (fact_pred %>% filter(REPORT_DT == rep_dt))$churn),2)
validation <- rbind(validation, c(rep_dt, "Gini", gini))
score <- list(train=train_data, test=fact_pred %>% filter(REPORT_DT == rep_dt) %>% select(prob))
perf <- perf_psi(score=score, x_limits = c(0,1), x_tick_break=0.1)
validation <- rbind(validation, c(rep_dt, "PSI", round(100*perf$psi$PSI,2)))
}
validation <- validation[-1,]
validation$REPORT_DT <- as.Date(validation$REPORT_DT)
validation <- data.frame(REPORT_DT = "1900-01-01",Metric = "none",Value = 0,stringsAsFactors=FALSE)
for (rep_dt in unique(fact_pred$REPORT_DT)) {
gini <- round(100*Gini((fact_pred %>% filter(REPORT_DT == rep_dt))$prob, (fact_pred %>% filter(REPORT_DT == rep_dt))$churn),2)
validation <- rbind(validation, c(rep_dt, "Gini", gini))
score <- list(train=train_data, test=fact_pred %>% filter(REPORT_DT == rep_dt) %>% select(prob))
perf <- perf_psi(score=score, x_limits = c(0,1), x_tick_break=0.1)
validation <- rbind(validation, c(rep_dt, "PSI", round(100*perf$psi$PSI,2)))
}
unique(fact_pred$REPORT_DT)
validation <- data.frame(REPORT_DT = "1900-01-01",Metric = "none",Value = 0,stringsAsFactors=FALSE)
for (rep_dt in unique(fact_pred$REPORT_DT)) {
gini <- round(100*Gini((fact_pred %>% filter(REPORT_DT == rep_dt))$prob, (fact_pred %>% filter(REPORT_DT == rep_dt))$churn),2)
validation <- rbind(validation, c(as.Date(rep_dt), "Gini", gini))
score <- list(train=train_data, test=fact_pred %>% filter(REPORT_DT == rep_dt) %>% select(prob))
perf <- perf_psi(score=score, x_limits = c(0,1), x_tick_break=0.1)
validation <- rbind(validation, c(as.Date(rep_dt), "PSI", round(100*perf$psi$PSI,2)))
}
for (rep_dt in unique(fact_pred$REPORT_DT)) {
gini <- round(100*Gini((fact_pred %>% filter(REPORT_DT == rep_dt))$prob, (fact_pred %>% filter(REPORT_DT == rep_dt))$churn),2)
validation <- rbind(validation, c(as.character(rep_dt), "Gini", gini))
score <- list(train=train_data, test=fact_pred %>% filter(REPORT_DT == rep_dt) %>% select(prob))
perf <- perf_psi(score=score, x_limits = c(0,1), x_tick_break=0.1)
validation <- rbind(validation, c(as.character(rep_dt), "PSI", round(100*perf$psi$PSI,2)))
}
validation <- data.frame(REPORT_DT = "1900-01-01",Metric = "none",Value = 0,stringsAsFactors=FALSE)
for (rep_dt in unique(fact_pred$REPORT_DT)) {
gini <- round(100*Gini((fact_pred %>% filter(REPORT_DT == rep_dt))$prob, (fact_pred %>% filter(REPORT_DT == rep_dt))$churn),2)
validation <- rbind(validation, c(as.character(rep_dt), "Gini", gini))
score <- list(train=train_data, test=fact_pred %>% filter(REPORT_DT == rep_dt) %>% select(prob))
perf <- perf_psi(score=score, x_limits = c(0,1), x_tick_break=0.1)
validation <- rbind(validation, c(as.character(rep_dt), "PSI", round(100*perf$psi$PSI,2)))
}
validation$REPORT_DT <- as.Date(validation$REPORT_DT)
View(validation)
for (rep_dt in unique(fact_pred$REPORT_DT)) {
gini <- round(100*Gini((fact_pred %>% filter(REPORT_DT == rep_dt))$prob, (fact_pred %>% filter(REPORT_DT == rep_dt))$churn),2)
validation <- rbind(validation, c(as.character(as.Date(rep_dt)), "Gini", gini))
score <- list(train=train_data, test=fact_pred %>% filter(REPORT_DT == rep_dt) %>% select(prob))
perf <- perf_psi(score=score, x_limits = c(0,1), x_tick_break=0.1)
validation <- rbind(validation, c(as.character(as.Date(rep_dt)), "PSI", round(100*perf$psi$PSI,2)))
}
validation <- data.frame(REPORT_DT = "1900-01-01",Metric = "none",Value = 0,stringsAsFactors=FALSE)
for (rep_dt in unique(fact_pred$REPORT_DT)) {
gini <- round(100*Gini((fact_pred %>% filter(REPORT_DT == rep_dt))$prob, (fact_pred %>% filter(REPORT_DT == rep_dt))$churn),2)
validation <- rbind(validation, c(as.character(as.Date(rep_dt)), "Gini", gini))
score <- list(train=train_data, test=fact_pred %>% filter(REPORT_DT == rep_dt) %>% select(prob))
perf <- perf_psi(score=score, x_limits = c(0,1), x_tick_break=0.1)
validation <- rbind(validation, c(as.character(as.Date(rep_dt)), "PSI", round(100*perf$psi$PSI,2)))
}
validation <- validation[-1,]
validation$REPORT_DT <- as.Date(validation$REPORT_DT)
gauge(42, min = 0, max = 100, symbol = '%', gaugeSectors(
success = c(80, 100), warning = c(40, 79), danger = c(0, 39)
))
validation %>% filter(Metric == "Gini") %>% ggplot(aes(x=REPORT_DT)) +
geom_bar(aes(y=Value), stat = "identity", position = "dodge", fill="deepskyblue1")+
xlab("") +
ylab("") +
ggtitle("Gini")
plotROC((fact_pred %>% filter(REPORT_DT == "2017-03-31"))$churn, (fact_pred %>% filter(REPORT_DT == "2017-03-31"))$prob)
library(flexdashboard)
library(ggplot2)
library(corrplot)
library(MASS)
library(caTools)
library(data.table)
library(Matrix)
library(xgboost)
library(party)
library(ggthemes)
library(ggmosaic)
library(Information)
library(InformationValue)
library(ClustOfVar)
library(MLmetrics)
library(dplyr)
library(ROCR)
library(scorecard)
library(knitr)
#Подгрузка данных
abt1 <-  as.data.frame(read.csv('abt_monitoring1.csv'))
glm_pred1 <-  as.data.frame(read.csv('glm_predictions1.csv'))
colnames(glm_pred) <- c("ID", "prob")
#Простановка фиктивной даты
rand_rep <- runif(50000,0,1)
REPORT_DT <- dplyr::if_else(rand_rep>=0 & rand_rep<0.2, as.Date("2016-11-30"),
dplyr::if_else(rand_rep>=0.2 & rand_rep<0.4, as.Date("2016-12-31"),
dplyr::if_else(rand_rep>=0.4 & rand_rep<0.6, as.Date("2017-01-31"),
dplyr::if_else(rand_rep>=0.6 & rand_rep<0.8, as.Date("2017-02-28"),
as.Date("2017-03-31")))))
abt$REPORT_DT <- REPORT_DT
glm_pred$REPORT_DT <- REPORT_DT
fact_pred <- abt %>% select(churn)
fact_pred$prob <- glm_pred$prob
fact_pred$REPORT_DT <- abt$REPORT_DT
train_data=glm_pred %>% filter(REPORT_DT <= "2017-01-31") %>% select(prob)
library(flexdashboard)
library(ggplot2)
library(corrplot)
library(MASS)
library(caTools)
library(data.table)
library(Matrix)
library(xgboost)
library(party)
library(ggthemes)
library(ggmosaic)
library(Information)
library(InformationValue)
library(ClustOfVar)
library(MLmetrics)
library(dplyr)
library(ROCR)
library(scorecard)
library(knitr)
#Подгрузка данных
abt1 <-  as.data.frame(read.csv('abt_monitoring.csv'))
glm_pred1 <-  as.data.frame(read.csv('glm_predictions.csv'))
colnames(glm_pred) <- c("ID", "prob")
#Простановка фиктивной даты
rand_rep <- runif(50000,0,1)
REPORT_DT <- dplyr::if_else(rand_rep>=0 & rand_rep<0.2, as.Date("2016-11-30"),
dplyr::if_else(rand_rep>=0.2 & rand_rep<0.4, as.Date("2016-12-31"),
dplyr::if_else(rand_rep>=0.4 & rand_rep<0.6, as.Date("2017-01-31"),
dplyr::if_else(rand_rep>=0.6 & rand_rep<0.8, as.Date("2017-02-28"),
as.Date("2017-03-31")))))
abt$REPORT_DT <- REPORT_DT
glm_pred$REPORT_DT <- REPORT_DT
fact_pred <- abt %>% select(churn)
fact_pred$prob <- glm_pred$prob
fact_pred$REPORT_DT <- abt$REPORT_DT
train_data=glm_pred %>% filter(REPORT_DT <= "2017-01-31") %>% select(prob)
library(flexdashboard)
library(ggplot2)
library(corrplot)
library(MASS)
library(caTools)
library(data.table)
library(Matrix)
library(xgboost)
library(party)
library(ggthemes)
library(ggmosaic)
library(Information)
library(InformationValue)
library(ClustOfVar)
library(MLmetrics)
library(dplyr)
library(ROCR)
library(scorecard)
library(knitr)
#Подгрузка данных
abt <-  as.data.frame(read.csv('abt_monitoring.csv'))
glm_pred <-  as.data.frame(read.csv('glm_predictions.csv'))
colnames(glm_pred) <- c("ID", "prob")
#Простановка фиктивной даты
rand_rep <- runif(50000,0,1)
REPORT_DT <- dplyr::if_else(rand_rep>=0 & rand_rep<0.2, as.Date("2016-11-30"),
dplyr::if_else(rand_rep>=0.2 & rand_rep<0.4, as.Date("2016-12-31"),
dplyr::if_else(rand_rep>=0.4 & rand_rep<0.6, as.Date("2017-01-31"),
dplyr::if_else(rand_rep>=0.6 & rand_rep<0.8, as.Date("2017-02-28"),
as.Date("2017-03-31")))))
abt$REPORT_DT <- REPORT_DT
glm_pred$REPORT_DT <- REPORT_DT
fact_pred <- abt %>% select(churn)
fact_pred$prob <- glm_pred$prob
fact_pred$REPORT_DT <- abt$REPORT_DT
train_data=glm_pred %>% filter(REPORT_DT <= "2017-01-31") %>% select(prob)
validation <- data.frame(REPORT_DT = "1900-01-01",Metric = "none",Value = 0,stringsAsFactors=FALSE)
for (rep_dt in as.Date((fact_pred %>% group_by(REPORT_DT)%>% summarise())$REPORT_DT)) {
gini <- round(100*Gini((fact_pred %>% filter(REPORT_DT == rep_dt))$prob, (fact_pred %>% filter(REPORT_DT == rep_dt))$churn),2)
validation <- rbind(validation, c(as.character(as.Date(rep_dt)), "Gini", gini))
score <- list(train=train_data, test=fact_pred %>% filter(REPORT_DT == rep_dt) %>% select(prob))
perf <- perf_psi(score=score, x_limits = c(0,1), x_tick_break=0.1)
validation <- rbind(validation, c(as.character(as.Date(rep_dt)), "PSI", round(100*perf$psi$PSI,2)))
}
validation <- validation[-1,]
validation$REPORT_DT <- as.Date(validation$REPORT_DT)
gauge(42, min = 0, max = 100, symbol = '%', gaugeSectors(
success = c(80, 100), warning = c(40, 79), danger = c(0, 39)
))
validation %>% filter(Metric == "Gini") %>% ggplot(aes(x=REPORT_DT)) +
geom_bar(aes(y=Value), stat = "identity", position = "dodge", fill="deepskyblue1")+
xlab("") +
ylab("") +
ggtitle("Gini")
plotROC((fact_pred %>% filter(REPORT_DT == "2017-03-31"))$churn, (fact_pred %>% filter(REPORT_DT == "2017-03-31"))$prob)
library(flexdashboard)
library(ggplot2)
library(corrplot)
library(MASS)
library(caTools)
library(data.table)
library(Matrix)
library(xgboost)
library(party)
library(ggthemes)
library(ggmosaic)
library(Information)
library(InformationValue)
library(ClustOfVar)
library(MLmetrics)
library(dplyr)
library(ROCR)
library(scorecard)
library(knitr)
abt <-  as.data.frame(read.csv('abt_monitoring.csv'))[,-c(1,2)]
glm_pred <-  as.data.frame(read.csv('glm_predictions.csv'))
colnames(glm_pred) <- c("ID", "prob")
head(abt)
abt <- abt %>% mutate(REPORT_DT = as.Date(REPORT_DT))
glm_pred$REPORT_DT <- abt$REPORT_DT
fact_pred <- abt %>% select(churn)
fact_pred$prob <- glm_pred$prob
fact_pred$REPORT_DT <- abt$REPORT_DT
abt %>% dplyr::group_by(REPORT_DT) %>%
dplyr::summarise(cnt = n())
train_data=glm_pred %>% filter(REPORT_DT <= "2017-01-31") %>% select(prob)
validation <- data.frame(REPORT_DT = "1900-01-01",Metric = "none",Value = 0,stringsAsFactors=FALSE)
unique(fact_pred$REPORT_DT)
for (rep_dt in unique(fact_pred$REPORT_DT)) {
gini <- round(100*Gini((fact_pred %>% filter(REPORT_DT == rep_dt))$prob, (fact_pred %>% filter(REPORT_DT == rep_dt))$churn),2)
validation <- rbind(validation, c(as.character(as.Date(rep_dt)), "Gini", gini))
score <- list(train=train_data, test=fact_pred %>% filter(REPORT_DT == rep_dt) %>% select(prob))
perf <- perf_psi(score=score, x_limits = c(0,1), x_tick_break=0.1)
validation <- rbind(validation, c(as.character(as.Date(rep_dt)), "PSI", round(100*perf$psi$PSI,2)))
}
validation <- validation[-1,]
validation$REPORT_DT <- as.Date(validation$REPORT_DT)
gauge(42, min = 0, max = 100, symbol = '%', gaugeSectors(
success = c(80, 100), warning = c(40, 79), danger = c(0, 39)
))
library(flexdashboard)
library(ggplot2)
library(corrplot)
library(MASS)
library(caTools)
library(data.table)
library(Matrix)
library(xgboost)
library(party)
library(ggthemes)
library(ggmosaic)
library(Information)
library(InformationValue)
library(ClustOfVar)
library(MLmetrics)
library(dplyr)
library(ROCR)
library(scorecard)
library(knitr)
#Подгрузка данных
abt <-  as.data.frame(read.csv('abt_monitoring.csv'))
glm_pred <-  as.data.frame(read.csv('glm_predictions.csv'))
colnames(glm_pred) <- c("ID", "prob")
#Простановка фиктивной даты
rand_rep <- runif(50000,0,1)
REPORT_DT <- dplyr::if_else(rand_rep>=0 & rand_rep<0.2, as.Date("2016-11-30"),
dplyr::if_else(rand_rep>=0.2 & rand_rep<0.4, as.Date("2016-12-31"),
dplyr::if_else(rand_rep>=0.4 & rand_rep<0.6, as.Date("2017-01-31"),
dplyr::if_else(rand_rep>=0.6 & rand_rep<0.8, as.Date("2017-02-28"),
as.Date("2017-03-31")))))
abt$REPORT_DT <- REPORT_DT
glm_pred$REPORT_DT <- REPORT_DT
fact_pred <- abt %>% select(churn)
fact_pred$prob <- glm_pred$prob
fact_pred$REPORT_DT <- abt$REPORT_DT
train_data=glm_pred %>% filter(REPORT_DT <= "2017-01-31") %>% select(prob)
validation <- data.frame(REPORT_DT = "1900-01-01",Metric = "none",Value = 0,stringsAsFactors=FALSE)
for (rep_dt in as.Date((fact_pred %>% group_by(REPORT_DT)%>% summarise())$REPORT_DT)) {
gini <- round(100*Gini((fact_pred %>% filter(REPORT_DT == rep_dt))$prob, (fact_pred %>% filter(REPORT_DT == rep_dt))$churn),2)
validation <- rbind(validation, c(as.character(as.Date(rep_dt)), "Gini", gini))
score <- list(train=train_data, test=fact_pred %>% filter(REPORT_DT == rep_dt) %>% select(prob))
perf <- perf_psi(score=score, x_limits = c(0,1), x_tick_break=0.1)
validation <- rbind(validation, c(as.character(as.Date(rep_dt)), "PSI", round(100*perf$psi$PSI,2)))
}
validation <- validation[-1,]
validation$REPORT_DT <- as.Date(validation$REPORT_DT)
gauge(42, min = 0, max = 100, symbol = '%', gaugeSectors(
success = c(80, 100), warning = c(40, 79), danger = c(0, 39)
))
validation %>% filter(Metric == "Gini") %>% ggplot(aes(x=REPORT_DT)) +
geom_bar(aes(y=Value), stat = "identity", position = "dodge", fill="deepskyblue1")+
xlab("") +
ylab("") +
ggtitle("Gini")
plotROC((fact_pred %>% filter(REPORT_DT == "2017-03-31"))$churn, (fact_pred %>% filter(REPORT_DT == "2017-03-31"))$prob)
validation %>% filter(Metric == "Gini") %>% ggplot(aes(x=REPORT_DT)) +
geom_bar(aes(y=Value), stat = "identity", position = "dodge", fill="deepskyblue1")+
xlab("") +
ylab("") +
ggtitle("Gini")
plotROC((fact_pred %>% filter(REPORT_DT == "2017-03-31"))$churn, (fact_pred %>% filter(REPORT_DT == "2017-03-31"))$prob)
View(fact_pred)
library(flexdashboard)
library(ggplot2)
library(corrplot)
library(MASS)
library(caTools)
library(data.table)
library(Matrix)
library(xgboost)
library(party)
library(ggthemes)
library(ggmosaic)
library(Information)
library(InformationValue)
library(ClustOfVar)
library(MLmetrics)
library(dplyr)
library(ROCR)
library(scorecard)
library(knitr)
abt <-  as.data.frame(read.csv('abt_monitoring.csv'))[,-c(1,2)]
glm_pred <-  as.data.frame(read.csv('glm_predictions.csv'))
colnames(glm_pred) <- c("ID", "prob")
head(abt)
abt <- abt %>% mutate(REPORT_DT = as.Date(REPORT_DT))
glm_pred$REPORT_DT <- abt$REPORT_DT
fact_pred <- abt %>% select(churn)
fact_pred$prob <- glm_pred$prob
fact_pred$REPORT_DT <- abt$REPORT_DT
abt %>% dplyr::group_by(REPORT_DT) %>%
dplyr::summarise(cnt = n())
train_data=glm_pred %>% filter(REPORT_DT <= "2017-01-31") %>% select(prob)
validation <- data.frame(REPORT_DT = "1900-01-01",Metric = "none",Value = 0,stringsAsFactors=FALSE)
unique(fact_pred$REPORT_DT)
for (rep_dt in unique(fact_pred$REPORT_DT)) {
gini <- round(100*Gini((fact_pred %>% filter(REPORT_DT == rep_dt))$prob, (fact_pred %>% filter(REPORT_DT == rep_dt))$churn),2)
validation <- rbind(validation, c(as.character(as.Date(rep_dt)), "Gini", gini))
score <- list(train=train_data, test=fact_pred %>% filter(REPORT_DT == rep_dt) %>% select(prob))
perf <- perf_psi(score=score, x_limits = c(0,1), x_tick_break=0.1)
validation <- rbind(validation, c(as.character(as.Date(rep_dt)), "PSI", round(100*perf$psi$PSI,2)))
}
validation <- validation[-1,]
validation$REPORT_DT <- as.Date(validation$REPORT_DT)
gauge(42, min = 0, max = 100, symbol = '%', gaugeSectors(
success = c(80, 100), warning = c(40, 79), danger = c(0, 39)
))
library(flexdashboard)
library(ggplot2)
library(corrplot)
library(MASS)
library(caTools)
library(data.table)
library(Matrix)
library(xgboost)
library(party)
library(ggthemes)
library(ggmosaic)
library(Information)
library(InformationValue)
library(ClustOfVar)
library(MLmetrics)
library(dplyr)
library(ROCR)
library(scorecard)
library(knitr)
abt <-  as.data.frame(read.csv('abt_monitoring.csv'))[,-c(1,2)]
glm_pred <-  as.data.frame(read.csv('glm_predictions.csv'))
colnames(glm_pred) <- c("ID", "prob")
head(abt)
abt <- abt %>% mutate(REPORT_DT = as.Date(REPORT_DT))
glm_pred$REPORT_DT <- abt$REPORT_DT
fact_pred <- abt %>% select(churn)
fact_pred$prob <- glm_pred$prob
fact_pred$REPORT_DT <- abt$REPORT_DT
abt %>% dplyr::group_by(REPORT_DT) %>%
dplyr::summarise(cnt = n())
train_data=glm_pred %>% filter(REPORT_DT <= "2017-01-31") %>% select(prob)
validation <- data.frame(REPORT_DT = "1900-01-01",Metric = "none",Value = 0,stringsAsFactors=FALSE)
unique(fact_pred$REPORT_DT)
for (rep_dt in unique(fact_pred$REPORT_DT)) {
gini <- round(100*Gini((fact_pred %>% filter(REPORT_DT == rep_dt))$prob, (fact_pred %>% filter(REPORT_DT == rep_dt))$churn),2)
validation <- rbind(validation, c(as.character(as.Date(rep_dt)), "Gini", gini))
score <- list(train=train_data, test=fact_pred %>% filter(REPORT_DT == rep_dt) %>% select(prob))
perf <- perf_psi(score=score, x_limits = c(0,1), x_tick_break=0.1)
validation <- rbind(validation, c(as.character(as.Date(rep_dt)), "PSI", round(100*perf$psi$PSI,2)))
}
validation <- validation[-1,]
validation$REPORT_DT <- as.Date(validation$REPORT_DT)
View(fact_pred)
validation %>% filter(Metric == "Gini") %>% ggplot(aes(x=REPORT_DT)) +
geom_bar(aes(y=Value), stat = "identity", position = "dodge", fill="deepskyblue1")+
xlab("") +
ylab("") +
ggtitle("Gini")
plotROC((fact_pred %>% filter(REPORT_DT == "2017-03-31"))$churn, (fact_pred %>% filter(REPORT_DT == "2017-03-31"))$prob)
unique(fact_pred$REPORT_DT)
plotROC((fact_pred %>% filter(REPORT_DT == "2017-03-31"))$churn, (fact_pred %>% filter(REPORT_DT == "2017-03-31"))$prob)
View(fact_pred)
library(flexdashboard)
library(ggplot2)
library(corrplot)
library(MASS)
library(caTools)
library(data.table)
library(Matrix)
library(xgboost)
library(party)
library(ggthemes)
library(ggmosaic)
library(Information)
library(InformationValue)
library(ClustOfVar)
library(MLmetrics)
library(dplyr)
library(ROCR)
library(scorecard)
library(knitr)
#Подгрузка данных
abt <-  as.data.frame(read.csv('abt_monitoring.csv'))
glm_pred <-  as.data.frame(read.csv('glm_predictions.csv'))
colnames(glm_pred) <- c("ID", "prob")
#Простановка фиктивной даты
rand_rep <- runif(50000,0,1)
REPORT_DT <- dplyr::if_else(rand_rep>=0 & rand_rep<0.2, as.Date("2016-11-30"),
dplyr::if_else(rand_rep>=0.2 & rand_rep<0.4, as.Date("2016-12-31"),
dplyr::if_else(rand_rep>=0.4 & rand_rep<0.6, as.Date("2017-01-31"),
dplyr::if_else(rand_rep>=0.6 & rand_rep<0.8, as.Date("2017-02-28"),
as.Date("2017-03-31")))))
abt$REPORT_DT <- REPORT_DT
glm_pred$REPORT_DT <- REPORT_DT
fact_pred <- abt %>% select(churn)
fact_pred$prob <- glm_pred$prob
fact_pred$REPORT_DT <- abt$REPORT_DT
train_data=glm_pred %>% filter(REPORT_DT <= "2017-01-31") %>% select(prob)
validation <- data.frame(REPORT_DT = "1900-01-01",Metric = "none",Value = 0,stringsAsFactors=FALSE)
unique(fact_pred$REPORT_DT)
for (rep_dt in as.Date((fact_pred %>% group_by(REPORT_DT)%>% summarise())$REPORT_DT)) {
gini <- round(100*Gini((fact_pred %>% filter(REPORT_DT == rep_dt))$prob, (fact_pred %>% filter(REPORT_DT == rep_dt))$churn),2)
validation <- rbind(validation, c(as.character(as.Date(rep_dt)), "Gini", gini))
score <- list(train=train_data, test=fact_pred %>% filter(REPORT_DT == rep_dt) %>% select(prob))
perf <- perf_psi(score=score, x_limits = c(0,1), x_tick_break=0.1)
validation <- rbind(validation, c(as.character(as.Date(rep_dt)), "PSI", round(100*perf$psi$PSI,2)))
}
validation <- validation[-1,]
validation$REPORT_DT <- as.Date(validation$REPORT_DT)
gauge(42, min = 0, max = 100, symbol = '%', gaugeSectors(
success = c(80, 100), warning = c(40, 79), danger = c(0, 39)
))
